name: Publish Alpha

on:
  repository_dispatch:
    types: [publish-release]

jobs:

  publish:
    outputs:
      shortref: ${{ steps.commitsha.outputs.short }}
    runs-on:
      - self-hosted
      - linux
      - aws

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Get Commit Hash
        id: commitsha
        run: |
          echo ::set-output name=short::$(git rev-parse --short HEAD)
          echo ::set-output name=long::$(git rev-parse HEAD)

      - name: Cache Gradle Packages
        uses: actions/cache@v2
        with:
          path: /root/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Publish Staging
        id: publish_staging
        uses: ./.github/actions/publish-action
        with:
          buildFlavor: Internal
          playTrack: Staging
          googleServices: ${{ secrets.GoogleServices }}
          playServices: ${{ secrets.PlayServices }}
          signingKeyStore: ${{ secrets.signingKeyStore }}
          signingKeyStoreAlias: ${{ secrets.signingKeyStoreAlias }}
          signingKeyStorePassword: ${{ secrets.signingKeyStorePassword }}
          signingKeyPassword: ${{ secrets.signingKeyPassword }}
          sonarHeaderValue: ${{ secrets.StagingSonarHeaderValue }}
          sonarAnalyticsKey: ${{ secrets.TestSonarAnalyticsKey }}
          sonarBaseUrl: ${{ secrets.StagingSonarBaseUrl }}
          sonarUrlApplyCoronavirusTest: https://self-referral.test-for-coronavirus.service.gov.uk/cta-start
          commitSha: ${{ steps.commitsha.outputs.short }}

      - name: Create Release
        id: create_release
        uses: fleskesvor/create-release@1a72e235c178bf2ae6c51a8ae36febc24568c5fe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.client_payload.tag }}
          release_name: Release ${{ github.event.client_payload.tag }}
          commitish: ${{ steps.commitsha.outputs.long }}
          body: ""

      - name: Upload Staging AAB
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/bundle/internal/app-internal.aab
          asset_name: app-staging-${{ steps.publish_staging.outputs.buildVersion }}(${{ steps.commitsha.outputs.short }}).aab
          asset_content_type: application/octet-stream

      - name: Upload Staging APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/internal/app-internal.apk
          asset_name: app-staging-${{ steps.publish_staging.outputs.buildVersion }}(${{ steps.commitsha.outputs.short }}).apk
          asset_content_type: application/vnd.android.package-archive

      - name: Publish Alpha
        id: publish_alpha
        uses: ./.github/actions/publish-action
        with:
          buildFlavor: Release
          playTrack: alpha
          googleServices: ${{ secrets.ProdGoogleServices }}
          playServices: ${{ secrets.PlayServices }}
          signingKeyStore: ${{ secrets.signingKeyStore }}
          signingKeyStoreAlias: ${{ secrets.signingKeyStoreAlias }}
          signingKeyStorePassword: ${{ secrets.signingKeyStorePassword }}
          signingKeyPassword: ${{ secrets.signingKeyPassword }}
          sonarHeaderValue: ${{ secrets.ProdSonarHeaderValue }}
          sonarAnalyticsKey: ${{ secrets.ProdSonarAnalyticsKey }}
          sonarBaseUrl: ${{ secrets.ProdSonarBaseUrl }}
          sonarUrlApplyCoronavirusTest: https://self-referral.test-for-coronavirus.service.gov.uk/cta-start
          commitSha: ${{ steps.commitsha.outputs.short }}

      - name: Upload Alpha AAB
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/bundle/release/app-release.aab
          asset_name: app-release-${{ steps.publish_alpha.outputs.buildVersion }}(${{ steps.commitsha.outputs.short }}).aab
          asset_content_type: application/octet-stream

      - name: Upload Alpha APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: app-release-${{ steps.publish_alpha.outputs.buildVersion }}(${{ steps.commitsha.outputs.short }}).apk
          asset_content_type: application/vnd.android.package-archive

      - name: Notify Slack
        uses: rtCamp/action-slack-notify@96d5e2a64fc78a6b7ac13265f55bee296869967a
        env:
          SLACK_WEBHOOK: ${{ secrets.SonarAndroidWebHook }}
          SLACK_COLOR: '#138275'
          SLACK_USERNAME: CI
          SLACK_TITLE: New Staging & Alpha Release
          SLACK_MESSAGE: |
            - Staging Build: ${{ steps.publish_staging.outputs.buildVersion }}(${{ steps.commitsha.outputs.short }})
            - Alpha Build: ${{ steps.publish_alpha.outputs.buildVersion }}(${{ steps.commitsha.outputs.short }})
            - Release Url: ${{ steps.create_release.outputs.html_url }}

  tag-as-supported:
    runs-on:
      - self-hosted
      - linux
      - aws

    needs: publish
    container: pactfoundation/pact-cli

    steps:
      - name: Tag published version as supported in pact broker
        run: pact-broker create-version-tag --tag supported --pacticipant 'Android App' --version ${{ needs.publish.outputs.shortref }}
        env:
          PACT_BROKER_BASE_URL: https://sonar-pact-broker-app.apps.nonprod.aws.cp.data.england.nhs.uk
