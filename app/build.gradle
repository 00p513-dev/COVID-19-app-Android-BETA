/*
 * Copyright Â© 2020 NHSX. All rights reserved.
 */

import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.ccil.cowan.tagsoup.Parser

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.github.triplet.play'
apply from: "$rootDir/ktlint.gradle"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "uk.nhs.nhsx.colocate"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments disableAnalytics: "true"
    }

    signingConfigs {
        config {
            keyAlias findProperty('SIGNING_KEY_ALIAS') ?: 'dummy-keystore'
            keyPassword findProperty('SIGNING_KEY_PASSWORD') ?: 'secret'
            storeFile file(findProperty('SIGNING_KEY_STORE') ?: 'dummy-keystore')
            storePassword findProperty('SIGNING_KEY_STORE_PASSWORD') ?: 'secret'
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled project.hasProperty("coverage")
        }
        internal {
            minifyEnabled false
            signingConfig signingConfigs.config
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    testOptions {
        animationsDisabled = true
        unitTests.returnDefaultValues = true
        unitTests.all {
            testLogging.exceptionFormat = TestExceptionFormat.FULL
            testLogging.showStandardStreams = true
        }

        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
}

play {
    enabled = project.hasProperty('play-enabled')
    serviceAccountCredentials = file(findProperty('PLAY_SERVICES_PUBLISH') ?: 'non-existing.json')

    track = "internal"
    defaultToAppBundles = true
    fromTrack = "internal"
    promoteTrack = "Test"
    resolutionStrategy = "auto"
    outputProcessor {
        def versionString = "$versionNameOverride.$versionCode"
        def gitCommit = findProperty('gitcommit') ?: 'unknown'
        def fullVersionString = "$versionString ($gitCommit)"

        versionNameOverride = fullVersionString

        logger.quiet("Publishing version: $fullVersionString")

        file("$buildDir/version.txt").text = "$versionString"
    }
}

task("outputInstrumentationErrors") {
    doFirst {
        def reportsDir = "$buildDir/reports/androidTests/connected"
        def htmlFiles = fileTree(dir: reportsDir, include: "*.html").getFiles()
        def slurper = new XmlSlurper(new Parser())

        htmlFiles
                .collectMany { file ->
                    def html = slurper.parse(file)
                    html.'**'.findAll { node -> node.name() == 'pre' }*.text()
                }
                .each { stacktrace ->
                    System.err.println("\n==============================\n$stacktrace==============================\n")
                }
    }
}

afterEvaluate {
    tasks["connectedDebugAndroidTest"].finalizedBy("outputInstrumentationErrors")
}

def timber_version = "4.7.1"

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.firebase:firebase-messaging:20.1.6'
    implementation 'com.google.android.material:material:1.1.0'
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'org.assertj:assertj-core:3.15.0'
    androidTestImplementation 'org.awaitility:awaitility-kotlin:3.1.6'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestUtil 'androidx.test:orchestrator:1.2.0'
}
